/*
 * Copyright (c) 2021 Nuvoton Technology Corporation.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;

#include <nuvoton/npcm400fm4.dtsi>
#include <dt-bindings/i2c/i2c.h>

/ {
	model = "Nuvoton NPCM400F evaluation board";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,shell-uart = &uart0;
		zephyr,console = &uart0;
	};

	aliases {
		peci-0 = &peci0;
	};


	power-states {
		suspend_to_idle0: suspend-to-idle0 {
			compatible = "zephyr,power-state";
			power-state-name = "suspend-to-idle";
			substate-id = <0>;
			min-residency-us = <1000>;
		};

		suspend_to_idle1: suspend-to-idle1 {
			compatible = "zephyr,power-state";
			power-state-name = "suspend-to-idle";
			substate-id = <1>;
			min-residency-us = <201000>;
		};
	};

	zephyr,user {
		/* adjust channel number according to enum adc_channel_en in adc_npcm4xx.c */
		/* Because VIN16, THR16, TD2P is the same pin, it must only select one type.
		 * Because VIN15, THR15, TD0P is the same pin, it must only select one type.
		 * Because VIN14, THR14, TD1P is the same pin, it must only select one type.
		 * Because VIN1, THR1, TD3P is the same pin, it must only select one type.
		 * Because VIN2, THR2, TD4P is the same pin, it must only select one type.
		 * Exsample : if you select channel 6(VIN16),
		 *            and you can't select channel 7(THR16) and channel 19(TD2P).
		 */
		io-channels = <&adc0 17>, <&adc0 18>;
	};

};

&uart0 {
	status = "okay";
	current-speed = <115200>;
};

&uart1 {
	status = "okay";
	current-speed = <115200>;
};

&twd0 {
	status = "okay";
};

&peci0 {
	status = "okay";
	pinctrl-0 = <&pinctrl_peci0_default>;
};

&spi_spim0 {
	status = "okay";
};

&spi_spim0_cs0 {
	status = "okay";
};

&spi_fiu0 {
	status = "okay";
};

&spi_fiu0_cs1 {
	status = "okay";
};

&espi0 {
	status = "okay";
};

&host_sub {
	status = "okay";
};

&kcs1 {
	status = "okay";
};

&kcs2 {
	status = "okay";
};

&kcs3 {
	status = "okay";
};

&kcs4 {
	status = "okay";
};

/*
 * I2C supported bitrate:
 *   I2C_BITRATE_STANDARD: 100 Kbit/s
 *   I2C_BITRATE_FAST: 400 Kbit/s
 *   I2C_BITRATE_FAST_PLUS: 1 Mbit/s
 *   number: 100000, 200000, ... , 900000, 1000000
 */
&i2c1a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c2a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c3a {
	clock-frequency = <I2C_BITRATE_FAST>;
	status = "okay";
};

&i2c4a {
	clock-frequency = <I2C_BITRATE_FAST_PLUS>;
	status = "okay";
};

&i2c5a {
	clock-frequency = <600000>;
	status = "okay";
};

&i2c6a {
	clock-frequency = <200000>;
	status = "disabled";
};

&i2c7a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c8a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c9a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c10a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c11a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c12a {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";
};

&i2c1b {
	clock-frequency = <700000>;
	status = "disabled";
};

&i2c4b {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "disabled";
};

&i2c6b {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "disabled";
};

&adc0 {
	status = "okay";
	/* Pin D7 have three type VIN16, THR16, TD2P, so it must only select one type for pin.
	 * Pin C7 have three type VIN15, THR15, TD1P, so it must only select one type for pin.
	 * Pin A6 have three type VIN14, THR14, TD0P, so it must only select one type for pin.
	 * Pin B6 have three type VIN1, THR1, TD3P, so it must only select one type for pin.
	 * Pin C6 have three type VIN2, THR2, TD4P, so it must only select one type for pin.
	 */
	pinctrl-0 = <&pinctrl_vin7_default /* VIN7 - C8 */
		     &pinctrl_vin5_default  /* VIN5 - F7 */
		     &pinctrl_vin16_default /* VIN16 - D7 */
		     /* &pinctrl_thr16_default */ /* THR16 - D7 */
		     /* &pinctrl_td2p_default */ /* TD2P - D7 */
		     &pinctrl_vin15_default /* VIN15 - C7 */
		     /* &pinctrl_thr15_default */ /* THR15 - C7 */
		     /* &pinctrl_td1p_default */ /* TD1P - C7 */
		     &pinctrl_vin14_default /* VIN14 - A6 */
		     /* &pinctrl_thr14_default */ /* THR14 - A6 */
		     /* &pinctrl_td0p_default */ /* TD0P - A6 */
		     &pinctrl_vin1_default  /* VIN1 - B6 */
		     /* &pinctrl_thr1_default */ /* THR1 - B6 */
		     /* &pinctrl_td3p_default */ /* TD3P - B6 */
		     &pinctrl_vin2_default  /* VIN2 - C6 */
		     /* &pinctrl_thr2_default */ /* THR2 - C6 */
		     /* &pinctrl_td4p_default */ /* TD4P - C6 */
		     &pinctrl_vin3_default>; /* VIN3 - D6 */
};

&spip1 {
	status = "okay";
};

&usbd0 {
	status = "okay";
};

&jtag1 {
	tck-gpios = <&gpio0 0 (GPIO_PUSH_PULL | GPIO_ACTIVE_HIGH)>;
	tdi-gpios = <&gpio0 1 (GPIO_PUSH_PULL | GPIO_ACTIVE_HIGH)>;
	tdo-gpios = <&gpio0 2 (GPIO_ACTIVE_HIGH)>;
	tms-gpios = <&gpio0 3 (GPIO_PUSH_PULL | GPIO_ACTIVE_HIGH)>;
	status = "disabled";
};

&i3c4 {
	status = "okay";
	assigned-address = <0x20>;
	i2c-scl-hz = <100000>;
	i3c-scl-hz = <12500000>;
	/* part-id = <0x1234>; */
	/* vendor-def-id = <0x567>; */
	bcr = <0x66>;
	dcr = <0xCC>;
	dma-tx-channel = <4>;
	dma-rx-channel = <10>;
	busno = <0x4>;
	pinctrl-0 = <&pinctrl_i3c4_default>;
};

&i3c5 {
	status = "okay";
	assigned-address = <0x21>;
	i2c-scl-hz = <100000>;
	i3c-scl-hz = <12500000>;
	/* part-id = <0x1234>; */
	/* vendor-def-id = <0x5607>; */
	bcr = <0x66>;
	dcr = <0xCC>;
	/* slave; */
	/* secondary; */
	dma-tx-channel = <5>;
	dma-rx-channel = <11>;
	busno = <0x5>;
	pinctrl-0 = <&pinctrl_i3c5_default>;

	/* #address-cells = <1>; */
	/* #size-cells = <0>; */

	/*
	 * i3c5_smq:i3c-slave-mqueue@21 {
	 *	compatible = "i3c-slave-mqueue";
	 *	reg = <0x21>;
	 *	msg-size = <256>;
	 *	num-of-msgs = <4>;
	 *	mandatory-data-byte = <0xae>;
	 *	label = "I3C_5_SMQ";
	 *	status = "okay";
	 * };
	 */
};

&sgpio0 {
	status = "disabled";
	sgpio0_0: sgpio0_0 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_0";
		pin-offset = <0>;
	};

	sgpio0_1: sgpio0_1 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_1";
		pin-offset = <8>;
	};

	sgpio0_2: sgpio0_2 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_2";
		pin-offset = <16>;
	};

	sgpio0_3: sgpio0_3 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_3";
		pin-offset = <24>;
	};

	sgpio0_4: sgpio0_4 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_4";
		pin-offset = <32>;
	};

	sgpio0_5: sgpio0_5 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_5";
		pin-offset = <40>;
	};

	sgpio0_6: sgpio0_6 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_6";
		pin-offset = <48>;
	};

	sgpio0_7: sgpio0_7 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_7";
		pin-offset = <56>;
	};

	sgpio0_8: sgpio0_8 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_8";
		pin-offset = <64>;
	};

	sgpio0_9: sgpio0_9 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_9";
		pin-offset = <72>;
	};

	sgpio0_a: sgpio0_a {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_a";
		pin-offset = <80>;
	};

	sgpio0_b: sgpio0_b {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_b";
		pin-offset = <88>;
	};

	sgpio0_c: sgpio0_c {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_c";
		pin-offset = <96>;
	};

	sgpio0_d: sgpio0_d {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_d";
		pin-offset = <104>;
	};

	sgpio0_e: sgpio0_e {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_e";
		pin-offset = <112>;
	};

	sgpio0_f: sgpio0_f {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO0_f";
		pin-offset = <120>;
	};
};

&sgpio1 {
	status = "disabled";
	sgpio1_0: sgpio1_0 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_0";
		pin-offset = <0>;
	};

	sgpio1_1: sgpio1_1 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_1";
		pin-offset = <8>;
	};

	sgpio1_2: sgpio1_2 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_2";
		pin-offset = <16>;
	};

	sgpio1_3: sgpio1_3 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_3";
		pin-offset = <24>;
	};

	sgpio1_4: sgpio1_4 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_4";
		pin-offset = <32>;
	};

	sgpio1_5: sgpio1_5 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_5";
		pin-offset = <40>;
	};

	sgpio1_6: sgpio1_6 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_6";
		pin-offset = <48>;
	};

	sgpio1_7: sgpio1_7 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_7";
		pin-offset = <56>;
	};

	sgpio1_8: sgpio1_8 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_8";
		pin-offset = <64>;
	};

	sgpio1_9: sgpio1_9 {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_9";
		pin-offset = <72>;
	};

	sgpio1_a: sgpio1_a {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_a";
		pin-offset = <80>;
	};

	sgpio1_b: sgpio1_b {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_b";
		pin-offset = <88>;
	};

	sgpio1_c: sgpio1_c {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_c";
		pin-offset = <96>;
	};

	sgpio1_d: sgpio1_d {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_d";
		pin-offset = <104>;
	};

	sgpio1_e: sgpio1_e {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_e";
		pin-offset = <112>;
	};

	sgpio1_f: sgpio1_f {
		#gpio-cells = <2>;
		gpio-controller;
		ngpios = <8>;
		interrupt-controller;
		#interrupt-cells = <2>;
		label = "SGPIO1_f";
		pin-offset = <120>;
	};
};

&emac {
	status = "okay";
};
